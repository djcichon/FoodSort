<h1>Create Grocery Trip</h1>

<div class="col-md-3">
	<h2>Meals to Cook</h2>
	<ul id="meal_list" class="sortable_list">
	</ul>
</div>
<div class="col-md-3 col-md-offset-1">
	<h2>My Recipes</h2>
	<ul id="recipe_list" class="sortable_list">
		<% @recipes.each do |recipe| %>
			<li data-recipe-id="<%= recipe.id %>">
				<%= recipe.name %>
			</li>
		<% end %>
	</ul>
</div>
<div class="col-md-3 col-md-offset-1">
	<h2>Grocery List</h2>
	<ol id="grocery_list" class="sortable_list">
	</ol>
</div>

<script>
	//TODO: Implement a way to remove a meal from the list.  Each ingredient should
  //TODO: be marked so it can be easily removed.
	Sortable.create($('#recipe_list')[0], { group: { name: "recipes" } });

	Sortable.create($('#meal_list')[0], { 
		group: { name: "recipes" },
		onAdd: function(e) {
			var recipe_id = $(e.item).data('recipe-id');

			$.ajax( { url: '<%= grocery_trips_get_ingredients_url %>', 
								data: { recipe_id: recipe_id } 
			})
			.done(function(json) {
				var $groceryList = $('#grocery_list');

				$.each(json, function( index, el ) {
					var order = (el.order == null ? -1 : parseInt(el.order));
					var newLi = '<li data-order="' + order + '" data-recipe-id="' + recipe_id + '">' + el.name + '</li>';


					// Find the correct position in the grocery list
					var $higherLi = null;
					$groceryList.find('li').each(function(index, el) {
						var elOrder = parseInt($(el).data('order'));

						if(elOrder > order) {
							$higherLi = $(el);

							return false;
						}
					});

					// Add this li before the higher one
					if($higherLi != null) {
						$higherLi.before(newLi);
					}
					// If a higher one wasn't found, just add it to the end
					else {
						$groceryList.append(newLi);
					}
				});
			});
		},
		onRemove: function(e) {
			var recipe_id = $(e.item).data('recipe-id');

			$('#grocery_list li[data-recipe-id=' + recipe_id + ']').remove();
		}
	});

</script>
