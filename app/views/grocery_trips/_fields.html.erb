<div class="row">
  <div class="col-md-6">
    <div class="form-group">
      <%= f.label :label %>
      <%= f.text_field :label, class: 'form-control' %>
    </div>
  </div>
</div>
<div class="row">
  <div class="col-md-3">
    <h2>Select Recipes</h2>
    <div id="dish_list" class="list-of-cards">
        <% @grocery_trip.dishes.sort { |a, b| a.name <=> b.name }.each do |dish| %>
          <div class="card" data-recipe-id="<%= dish.recipe.id %>">
            <%= f.fields_for :dishes, dish do |dish_form| %>
              <%= dish_form.hidden_field :recipe_id %>
              <%= dish_form.hidden_field :count, class: 'dish-count-hidden' %>
            <% end %>
            <div class="dish-name">
              <%= dish.recipe.name %>
            </div>
            <div class="dish-controls">
              <span class="dish-minus glyphicon glyphicon-minus"></span>
              <span class="dish-count">
                <%= dish.count %>
              </span>
              <span class="dish-plus glyphicon glyphicon-plus"></span>
            </div>
          </div>
        <% end %>
    </div>
    <%= f.button "Create Grocery Trip", class: 'btn btn-primary' %>
  </div>

  <div class="col-md-3 col-md-offset-1">
    <h2>Grocery List</h2>
    <div id="grocery_list" class="list-of-cards">
    </div>
  </div>
</div>

<script>
(function() {
  function addMeal() {
    var $card = $(this).parents('.card');
    var recipe_id = $card.data('recipe-id');

    $.ajax( { url: '<%= grocery_trips_get_ingredients_url %>', 
              data: { recipe_id: recipe_id } 
    })
    .done(function(json) {
      var $groceryList = $('#grocery_list');
      var new_count = updateCounts($card, 1);

      $.each(json, function( index, el ) {
        var order = (el.order == null ? -1 : parseInt(el.order));

        var $liToAddBefore = findLiToAddBefore($groceryList, order);
        addNewLiToGroceryList($groceryList, $liToAddBefore, order, recipe_id, new_count, el.name);

      });
    });
  }

  function removeMeal() {
    var $card = $(this).parents('.card');
    var recipe_id = $card.data('recipe-id');
    var current_count = $card.find('.dish-count').html();

    if(current_count > 0) {
      $('#grocery_list div[data-recipe-id=' + recipe_id + '][data-dish-count=' + current_count + ']').remove();
      updateCounts($card, -1);
    }
  }

  function updateCounts($card, amount_to_add) {
    var $count = $card.find('.dish-count');
    var $count_hidden = $card.find('.dish-count-hidden');
    var current_count = parseInt($count.html());

    var new_count = Math.max(0, current_count + amount_to_add)

    $count.html(new_count);
    $count_hidden.val(new_count);

    return new_count;
  }

  function findLiToAddBefore($groceryList, order) {
    var $higherLi = null;
    $groceryList.find('div').each(function(index, el) {
      var elOrder = parseInt($(el).data('order'));

      if(elOrder > order) {
        $higherLi = $(el);

        return false;
      }
    });

    return $higherLi;
  }

  function addNewLiToGroceryList($groceryList, $liToAddBefore, order, recipe_id, dish_count, name) {
    var newLi = '<div class="card" data-order="' + order + 
      '" data-recipe-id="' + recipe_id + 
      '" data-dish-count="' + dish_count + 
      '">' + name + '</li>';

    // Add this li before the higher one
    if($liToAddBefore != null) {
      $liToAddBefore.before(newLi);
    }
    // If a higher one wasn't found, just add it to the end
    else {
      $groceryList.append(newLi);
    }
  }

  $('.dish-plus').on('click', addMeal);
  $('.dish-minus').on('click', removeMeal);
}());
</script>
